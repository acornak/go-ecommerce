{{template "base" .}}

{{define "title"}}
    {{index .StringMap "title"}}
{{end}}

{{define "content"}}
    <h2 class="mt-5">{{index .StringMap "title"}}</h2>
    <span class="badge bg-danger d-none" id="refunded">{{index .StringMap "alert-text"}}</span>
    <span class="badge bg-success d-none" id="charged">Charged</span>
    <hr>

    <div class="alert alert-danger text-center d-none" id="messages"></div>

    <div>
        <strong>Order No: </strong><span id="order-no"></span><br>
        <strong>Customer: </strong><span id="customer"></span><br>
        <strong>Product: </strong><span id="product"></span><br>
        <strong>Quantity: </strong><span id="quantity"></span><br>
        <strong>Total Sale: </strong><span id="amount"></span><br>
    </div>

    <hr>

    <a class="btn btn-info" href='{{index .StringMap "cancel"}}'>Cancel</a>
    <a class="btn btn-warning d-none" href="#!" id="refund-btn">{{index .StringMap "refund-btn"}}</a>

    <input type="hidden" id="pi" value="">
    <input type="hidden" id="charge-amount" value="">
    <input type="hidden" id="currency" value="">

{{end}}

{{define "js"}}
{{template "format-currency" .}}
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
let token = localStorage.getItem("token");
let id = window.location.pathname.split("/").pop();
let messages = document.getElementById("messages")

function showError(msg) {
    messages.classList.add("alert-danger");
    messages.classList.remove("alert-success");
    messages.classList.remove("d-none");
    messages.innerText = msg;
}

function showSuccess() {
    messages.classList.remove("alert-danger");
    messages.classList.add("alert-success");
    messages.classList.remove("d-none");
    messages.innerText = '{{index .StringMap "message-text"}}';
}

document.addEventListener("DOMContentLoaded", function() {
    const requestOptions = {
        method: "post",
        headers: {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "Authorization": "Bearer " + token,
        }
    }

    fetch("{{.API}}/v1/api/admin/get-sale/" + id, requestOptions)
    .then(response => response.json())
    .then(function(data) {
        if (data) {
            document.getElementById("order-no").innerHTML = data.id;
            document.getElementById("customer").innerHTML = data.customer.first_name + " " + data.customer.last_name;
            document.getElementById("product").innerHTML = data.widget.name;
            document.getElementById("quantity").innerHTML = data.quantity;
            document.getElementById("amount").innerHTML = formatCurrency(data.transaction.amount, data.transaction.currency);
            document.getElementById("pi").value = data.transaction.payment_intent;
            document.getElementById("charge-amount").value = data.transaction.amount;
            document.getElementById("currency").value = data.transaction.currency;

            if (data.status_id === 1) {
                document.getElementById("refund-btn").classList.remove("d-none");
                document.getElementById("charged").classList.remove("d-none");
            } else {
                document.getElementById("refunded").classList.remove("d-none");
            }
        }
    })
});

document.getElementById("refund-btn").addEventListener("click", function(){
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to undo this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: '{{index .StringMap "refund-btn"}}'
    }).then((result) => {
        if (result.isConfirmed) {
            let payload = {
                payment_intent: document.getElementById("pi").value,
                currency: document.getElementById("currency").value,
                amount: parseInt(document.getElementById("charge-amount").value, 10),
                id: parseInt(id, 10),
            }

             const requestOptions = {
                method: "post",
                headers: {
                    "Accept": "application/json",
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + token,
                },
                body: JSON.stringify(payload),
            }

            fetch('{{.API}}{{index .StringMap "refund-url"}}', requestOptions)
            .then(response => response.json())
            .then(function(data) {
                if (data.error) {
                    let msg
                    try {
                        msg = JSON.parse(data.message).message
                    } catch (SyntaxError) {
                        msg = data.message
                    }
                    showError(msg)
                } else {
                    showSuccess();
                    document.getElementById("refund-btn").classList.add("d-none");
                    document.getElementById("refunded").classList.remove("d-none");
                    document.getElementById("charged").classList.add("d-none");
                }
            })
        }
    })
});
</script>

{{end}}
